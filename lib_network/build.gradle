plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.kotlin.serialization)
}
android {
    namespace 'com.example.lib_network'
    compileSdk libs.versions.compileSdk.get().toInteger()
    defaultConfig {
        minSdk libs.versions.minSdk.get().toInteger()
        targetSdk libs.versions.targetSdk.get().toInteger()
        versionCode 1
        versionName "1.0"
        consumerProguardFiles 'consumer-rules.pro'

        // 从 local.properties 读取 ZHIPU_API_KEY
        Properties localProps = new Properties()
        File localPropsFile = project.rootProject.file('local.properties')
        if (localPropsFile.exists()) {
            localPropsFile.withInputStream { stream ->
                localProps.load(stream)
            }
        }
        def zhipuApiKey = localProps.getProperty('ZHIPU_API_KEY', '')
        buildConfigField "String", "ZHIPU_API_KEY", "\"${zhipuApiKey}\""
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    buildFeatures.buildConfig = true
}
dependencies {
    implementation project(':base')
    api libs.bundles.network
}